FORMAT: 1A
HOST: http://YourTableauServer.com

# The Unofficial Guide to Tableau's Vizportal API
<!-- ### documentation by Mark Jacobson, https://viziblydiffrnt.github.io -->

Welcome to the Tableau Vizportal API aka the "Undocumented API". This API provides functionality for most operations on Tableau Server. The goal of this guide is to document the **"undocumented" API** so that you can perform tasks not possible with Tableau's REST API or other command-line utilities.

::: warning
To use this API you'll need to first establish an HTTP session and connect to Vizportal via the following calls:

1. Generate Public Key: This key will be used to encrypt your password for the Login call
2. Login: You'll want to retain the **workgroup_session_id** and **XSRF-TOKEN** that are returned in the response header's Set-Cookie. The XSRF-TOKEN is required for the Request Header on subsequent calls to Vizportal.

*All of the API methods detailed in this guide require secure authentication to Tableau Server with a registered user. All commands also honor Tableau Server's inherent permissioning system.*
:::

# Group Active Directory

##

## Get Last AD Group Sync Time [/vizportal/api/web/v1/getLastActiveDirectoryGroupSyncTime]

### Get Last AD Group Sync Time [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getLastActiveDirectoryGroupSyncTime",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{}
            }


# Group Auth

##

## Generate Public Key [/vizportal/api/web/v1/generatePublicKey]

### Generate Public Key [POST]

::: note
When using Vizportal, this should be the first call that you make. There are 3 values that need to be captured and used to encrypt your password for a successful Login to occur:

* keyId
* modulus "n"
* exponent "e"

Once you have these, use the RSA PKCS1 protocol to encrypt the password you'll use to log in to Vizportal.

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "generatePublicKey",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result": {
                "keyId" : "qaZwwdvahYF0Tue0ugTNuM",
                "key":{
                  "n": "9c979cf162b675ce6587b7f076e20ea40b2b58fe757c6bc51a4b6da788acdf6a753eec3cda9e4839023716e9c5239716df6bc4db1b5b1d95f8f9757f11926052085202a5bc4fea9405ccfa0b31c5094f47d344b17f534b969ea129f2d03ed5b01c668d",
                  "e": "10001"
                }

              }

            }

    + Schema

            {
              "type": "object",
              "properties": {
                "result": {
                  "type": "object",
                  "properties": {
                    "keyId": {"type":"string"},
                    "key": {
                      "type": "object",
                      "properties": {
                        "n": {"type":"string"},
                        "e":{"type":"string"}
                      }
                  }
                  }
                }
              }
            }

## Get OAuth Credentials [/vizportal/api/web/v1/getOAuthCredentials]

### Get OAuth Credentials [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getOAuthCredentials",
              "params":
              {
                  "page":
                  {
                    "startIndex":0,
                    "maxItems":1000
                  }
              }

            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "startIndex": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "maxItems": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Login [/vizportal/api/web/v1/login]

### Login [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "login",
              "params":
              {
                "username":"Admin",
                "encryptedPassword":"Some String",
                "keyId":"Another String"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "encryptedPassword": {
                      "type": "string"
                    },
                    "keyId": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

                {
                "result": {
                    "server": {
                        "defaultDomain": "local",
                        "version": {
                            "bitness": "64",
                            "build": "10000.16.1004.1720",
                            "externalVersion": {
                                "major": "10",
                                "minor": "0",
                                "patch": "2"
                            }
                        },
                        "siteCustomizationEnabled": false,
                        "featureFlags": {
                            "ha2Enabled": true,
                            "alertOnThresholdConditionEnabled": false,
                            "subscribeOnExtractRefreshEnabled": false,
                            "workbookVersionHistoryContentVersionLimitEnabled": true,
                            "dataSyncEnabled": false,
                            "contentDiscoveryPhase3Enabled": false,
                            "integratedDatasourcesUIEnabled": true,
                            "contentDiscoveryPhase2Enabled": true,
                            "desktopReportingEnabled": false,
                            "oauthWDCServerRefreshEnabled": true,
                            "contentDiscoveryPhase1Enabled": true,
                            "subscribeOthersEnabled": true,
                            "alertWhenDataPresentEnabled": false,
                            "workbookVersionHistoryViewDownloadDeleteEnabled": true,
                            "datasourceVersionHistoryViewDownloadDeleteEnabled": true,
                            "dataSyncLaunchFromWebEnabled": true,
                            "ha2FilestoreEnabled": true,
                            "dataIntegrationEnabled": true,
                            "connectedClientsTableEnabled": true,
                            "workbookVersionHistoryEnabled": true,
                            "lowDiskSpaceEnabled": true,
                            "oauthQuickBooksWDCServerRefreshEnabled": true
                        },
                        "oauthSalesforceEnabled": false,
                        "oauthQuickBooksEnabled": false,
                        "oauthGoogleEnabled": false,
                        "displaySchedulesInClientTimezone": true,
                        "refreshFailureNotificationEnabledForServer": true,
                        "displayScheduleDescriptionAsName": false,
                        "helpEdition": "server",
                        "supportHost": "",
                        "supportPath": "",
                        "datasourceHelpUrl": "",
                        "updateEmailAllowed": true,
                        "updateDisplayNameAllowed": true,
                        "sessionIdleLimitSeconds": 240,
                        "tabAdminServiceEnabled": true,
                        "alertLookBackDaysLimit": 14,
                        "siteAdminSettingsEnabled": false,
                        "defaultSubscriptionsEmail": "",
                        "logicalServerInstanceId": "",
                        "offlineHelpEnabled": false,
                        "rebuildingSearchIndex": false,
                        "alertFailureCountThreshold": 5
                    },
                    "site": {
                        "name": "Canada",
                        "id": "8",
                        "role": "Publisher",
                        "luid": "99faa865-2871-4d6a-994d-e815211dfd8c",
                        "urlName": "canada",
                        "refreshFailureNotificationEnabled": true,
                        "logoutEnabled": true,
                        "thirdPartyAuthState": {
                            "enabled": false,
                            "allowed": false,
                            "serverEnabled": false,
                            "hasThirdPartyAuthenticatedUsers": false
                        },
                        "versioningEnabled": true,
                        "liveDBAvailable": false
                    },
                    "user": {
                        "language": "en",
                        "id": "72",
                        "displayName": "Admin",
                        "locale": "en_US",
                        "username": "Admin",
                        "domainName": "local",
                        "displayMode": "list",
                        "startPage": "/",
                        "serverAdmin": true,
                        "numberOfSites": 7,
                        "canManageUsers": true
                    },
                    "isRestrictedTrustedTicketSession": false
                }
            }


# Group Comments

##

## Create Comment [/vizportal/api/web/v1/createComment]

### Create Comment [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"createComment",
              "params":
              {
                "viewId":"3527",
                "text":"Your Comment Text Goes Here"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "viewId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "id":"10"
              }
            }

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Comment [/vizportal/api/web/v1/deleteComment]

### Delete Comment [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteComment",
              "params":
              {
                "id":"7"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{}
            }


## Get Comments [/vizportal/api/web/v1/getComments]

### Get Comments [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getComments",
              "params":
              {
                "viewId":"3527",
                "page":
                {
                  "startIndex":0,
                  "maxItems":10
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "viewId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":0,
                "moreItems":false,
                "comments":[{
                  "id":"10",
                  "text":"Testing",
                  "ownerId":"5",
                  "updatedAt":"2017-01-06T18:54:51.095Z",
                  "createdAt":"2017-01-06T18:54:51.095Z"
                }],
                "users":[{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                }]
              }
            }


## Update Comment [/vizportal/api/web/v1/updateComment]

### Update Comment [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateComment",
              "params":
              {
                "id":"7",
                "text":"Updated Comment Text Goes Here"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "text": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{}
            }


# Group Data Connections

##

## Get Data Connections [/vizportal/api/web/v1/getDataConnections]

### Get Data Connections [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getDataConnections",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses": [
                    {
                      "operator":"eq",
                      "field":"isPublished",
                      "value":true
                    }]
                }
                "order":
                [
                  {
                    "field":"name",
                    "ascending":true
                  }
                ]
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":1,
                "moreItems":false,
                "dataConnections":[{
                  "datasourceId":"2774",
                  "updatedAt":"2016-12-09T23:01:17.807Z",
                  "id":"2774",
                  "ownerId":"5",
                  "projectId":"27",
                  "isHierarchical":false,
                  "connectionOAuth":false,
                  "connectionTypeEditable":true,
                  "connectionTypeDisplayName":"PostgreSQL",
                  "connectionDetails":{
                    "serverPort":"8060",
                    "serverName":"localhost",
                    "hasEmbeddedPassword":true,
                    "databaseUserName":"readonly",
                    "type":"database"
                  },
                  "connectionType":"postgres"
                }],
                "datasources":[{
                  "name":"_groups (workgroup)",
                  "id":"2774",
                  "ownerId":"5",
                  "projectId":"27"
                }],
                "workbooks":[],
                "projects":[{
                  "name":"test",
                  "id":"27"
                }],
                "users":[{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                }]
              }
            }


## Check Connection [/vizportal/api/web/v1/checkConnection]

### Check Connection [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"checkConnection",
              "params":
              {
                "id":"1103",
                "server":"dbhost",
                "port":"5430",
                "username":"dbUserName",
                "embedPassword":true
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "server": {
                      "type": "string"
                    },
                    "port": {
                      "type": "string"
                    },
                    "username": {
                      "type": "string"
                    },
                    "embedPassword": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "succeeded":true,
                "messages":[]
              }
            }


## Update Connections [/vizportal/api/web/v1/updateConnections]

### Update Connections [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateConnections",
              "params":
              {
                "ids":["1103"],
                "server":"dbhost",
                "port":"5430",
                "username":"dbUserName",
                "embedPassword":true
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "server": {
                      "type": "string"
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "embedPassword": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "actionId":"36"
              }
            }


# Group Datasources

##

## Get Datasource Actions [/vizportal/api/web/v1/getDatasourceActions]

### Get Datasource Actions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getDatasourceActions",
              "params":
              {
                "id":"47"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "launchWebAuthoring":true,
                "download":true,
                "setDisplayTabs":true,
                "refreshExtract":true,
                "setProject":true,
                "del":true,
                "versionManagement":true,
                "setTags":true,
                "setDescription":true,
                "setPermissions":true,
                "setOwner":true
              }
            }


## Get Datasource [/vizportal/api/web/v1/getDatasource]

### Get Datasource [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getDatasource",
              "params":
              {
                "id":"1103"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "name":"Sample - Superstore"
                "id":"47",
                "owner":{
                  "id":"7",
                  "readOnly":false,
                  "displayName":"Publisher",
                  "username":"Publisher",
                  "domainName":"local",
                  "serverAdmin":false
                },
                "tags":[],
                "datasourceId":"2",
                "updatedAt":"2013-06-24T15:24:46.921Z",
                "refreshMode":"Server",
                "createdAt":"2013-06-24T15:24:46.921Z",
                "project":{
                  "name":"Demos",
                  "id":"4"
                },
                "repositoryUrl":"Sample-Superstore",
                "isHierarchical":false,
                "connectionOAuth":false,
                "connectionTypeEditable":false,
                "favorite":false,
                "downloadUrl":"/datasources/Sample-Superstore.tds",
                "hasExtracts":true,
                "hasAlert":false,
                "connectionTypeDisplayName":"Tableau Data Engine",
                "connectionDetails":{
                  "fileName":"Data\\Datasources\\Sample - Superstore Sales Multi-language (Extract).tde",
                  "hasEmbeddedPassword":false,
                  "type":"file"
                },
                "lastRefreshedAt":"2013-06-24T15:24:46.921Z",
                "connectionType":"dataengine",
                "newWorkbookUrl":"/authoringNewWorkbook/Sample-Superstore"
                "hasIncrementalExtract":false,
                "datasourceModifiedAt":"2016-12-23T16:53:23.926Z"
              }
            }


## Get Datasources [/vizportal/api/web/v1/getDatasources]

### Get Datasources [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {"method":"getDatasources","params":{"filter":{"operator":"and","clauses":[{"operator":"eq","field":"isPublished","value":true}]},"order":[{"field":"hitsTotal","ascending":false},{"field":"name","ascending":true}],"page":{"startIndex":0,"maxItems":0}}}

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":15,
                "moreItems":true
              }
            }


## Get Datasource Versions [/vizportal/api/web/v1/getDatasourceVersions]

### Get Datasource Versions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getDatasourceVersions",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses": [
                    {
                      "operator":"eq",
                      "field":"datasourceId",
                      "value":"1932"
                    }]
                }
                "order":
                [
                  {
                    "field":"versionNumber",
                    "ascending":false
                  }
                ]
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "filter": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":1,
                "moreItems":false,
                "versions":[{
                  "datasourceId":"2",
                  "id":"2@1",
                  "siteId":"1",
                  "versionNumber":1,
                  "deleted":false,
                  "publisher":"Publisher",
                  "downloadUrl":"/datasources/history/Sample-Superstore_1.tds",
                  "publishTime":"2016-12-23T16:53:23.926Z",
                  "current":true
                }]
              }
            }


## Set Datasource Description [/vizportal/api/web/v1/setDatasourceDescription]

### Set Datasource Description [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setDatasourceDescription",
              "params":
              {
                "id":"1018",
                "description":"Datasource Description Text Goes Here"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Datasources Owner [/vizportal/api/web/v1/setDatasourcesOwner]

### Set Datasources Owner [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setDatasourcesOwner",
              "params":
              {
                "ids":["1018"],
                "ownerId":"5"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "ownerId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Datasources [/vizportal/api/web/v1/deleteDatasources]

### Delete Datasources [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "deleteDatasources",
              "params":
              {
                "ids":["2875"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Datasource Versions [/vizportal/api/web/v1/deleteDatasourceVersions]

### Delete Datasource Versions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteDatasourceVersions",
              "params":
              {
                "ids":["1469@1"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Move Datasources to Project [/vizportal/api/web/v1/moveDatasourcesToProject]

### Move Datasources to Project [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"moveDatasourcesToProject",
              "params":
              {
                "ids":["47"],
                "projectId":"1"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "projectId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Extracts

##

## Get Extract Tasks [/vizportal/api/web/v1/getExtractTasks]

### Get Extract Tasks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getExtractTasks",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"eq",
                      "field":"siteId",
                      "value":"1"
                    }
                  ]
                }
                "order":
                  [
                    {
                      "field":"targetName",
                      "ascending":true
                    }
                  ]
                "page":
                  {
                    "startIndex":0,
                    "maxItems":0
                  }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":1,
                "moreItems":true,
                "tasks":[],
                "datasources":[],
                "workbooks":[],
                "schedules":[],
                "sites":[]
              }
            }


## Set Extract Tasks Priority [/vizportal/api/web/v1/setExtractTaskPriority]

### Set Extract Tasks Priority [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setExtractTaskPriority",
              "params": {
                "ids": [
              "55"
                ],
                "priority": 49
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Extract Tasks Schedule [/vizportal/api/web/v1/setExtractTasksSchedule]

### Set Extract Tasks Schedule [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setExtractTasksSchedule",
              "params":
              {
                "ids":["55"],
                "scheduleId":"1"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "scheduleId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Create Extract Tasks [/vizportal/api/web/v1/createExtractTasks]

### Create Extract Tasks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"createExtractTasks",
              "params": {
                "targetType":"Workbook",
                "targetIds": ["699"],
                "scheduleId": "2",
                "type":"RefreshExtract"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "targetType": {
                      "type": "string"
                    },
                    "targetIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "scheduleId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "type": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Extract Tasks [/vizportal/api/web/v1/deleteExtractTasks]

### Delete Extract Tasks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteExtractTasks",
              "params":
              {
                "ids":["23"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Run Extract Tasks [/vizportal/api/web/v1/runExtractTasks]

### Run Extract Tasks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"runExtractTasks",
              "params":
              {
                "ids":["55"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Favorites

##

## Add Favorite [/vizportal/api/web/v1/addFavorite]

### Add Favorite [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"addFavorite",
              "params":
              {
                "objectId":"380",
                "objectType":"workbook"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "objectId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "objectType": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Remove Favorite [/vizportal/api/web/v1/removeFavorite]

### Remove Favorite [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"removeFavorite",
              "params":
              {
                "objectId":"380",
                "objectType":"workbook"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "objectId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "objectType": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Favorites [/vizportal/api/web/v1/getFavorites]

### Get Favorites [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getFavorites",
              "params":
              {
                "page":
                {
                  "startIndex":0,
                  "maxItems":1000
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":1,
                "moreItems":false,
                "favorites":[{
                  "id":"27",
                  "objectName":"Teams",
                  "position":"1",
                  "objectId":"1568",
                  "objectType":"view",
                  "objectOwnerId":"5",
                  "objectIdForFavoriting":"1568",
                  "objectOwnerName":"Admin",
                  "objectProjectId":"26",
                  "objectUpdatedAt":"2015-03-24T12:02:47.710Z",
                  "objectProjectName":"Wellness"
                }],
                "views"[{
                  "names":"Teams",
                  "id":"1568",
                  "path":"wellness_challenge/Teams",
                  "index":"1",
                  "updatedAt":"2015-03-24T12:02:47.710Z",
                  "workbookId":"462",
                  "usageInfo":{
                    "favoritesTotal":1,
                    "hitsLastThreeMonthsTotal":2,
                    "hitsLastOneMonthTotal":1,
                    "hitsLastTwelveMonthsTotal":3,
                    "hitsTotal":873
                  },
                  "thumbnailUrl":"vizportal/api/rest/v1/views/1568/thumbnail?1427198567710"
                }],
                "workbooks":[{
                  "name":"wellness_challenge",
                  "id":462,
                  "size":101998,
                  "ownerId":"5",
                  "displayTabs":true,
                  "updatedAt":"2015-03-24T12:02:47.804Z",
                  "defaultViewId":"1568",
                  "repositoryUrl":"wellness_challenge",
                  "projectId":"26",
                  "defaultViewUrl":"wellness_challenge/Teams",
                  "usageInfo":{
                    "favoritesTotal":0,
                    "hitsLastThreeMonthsTotal":2,
                    "hitsLastOneMonthTotal":1,
                    "hitsLastTwelveMonthsTotal":3,
                    "subscriptionsTotal":0,
                    "hitsTotal":1234
                  },
                  "downloadUrl":"/workbooks/wellness_challenge.twb",
                  "thumbnailUrl":"vizportal/api/rest/v1/workbooks/462/thumbnail?1427198567804",
                  "hasExtracts":false,
                  "hasAlert":false,
                  "sheetCount":2
                }]
              }
            }


# Group Groups

##

## Create Group [/vizportal/api/web/v1/createGroup]

### Create Group [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "createGroup",
              "params":
              {
                "name":"NameOfGroup"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Groups [/vizportal/api/web/v1/deleteGroups]

### Delete Groups [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteGroups",
              "params":
              {
                "ids":["14"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Groups [/vizportal/api/web/v1/getGroups]

### Get Groups [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getGroups",
              "params":
              {
                "order":
                [
                  {
                    "field":"name",
                    "ascending":true
                  }
                ]
                "page":
                {
                  "startIndex": 0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":2,
                "moreItems":false,
                "groups":[{
                  "name":"All Users",
                  "id":"2",
                  "domainName":"local",
                  "userCount":18,
                  "isAllUsersGroup":true
                },
                {
                  "name":"Test",
                  "id":"9",
                  "domainName":"local",
                  "userCount":0,
                  "isAllUsersGroup":false
                }
                ]
              }
            }


## Update Group Name [/vizportal/api/web/v1/updateGroupName]

### Update Group Name [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "updateGroupName",
              "params":
              {
                "groupId":"14",
                "name":"UpdatedGroupName"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Permissions

##

## Get Effective Permissions [/vizportal/api/web/v1/getEffectivePermissions]

### Get Effective Permissions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getEffectivePermissions":
              "params":
              {
                "userIds":["27","6","25"],
                "authorizables":
                {
                  "type":"project",
                  "ids":["43"]
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "authorizables": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Explicit Permissions [/vizportal/api/web/v1/getExplicitPermissions]

### Get Explicit Permissions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getExplicitPermissions",
              "params":
              {
                "authorizables":
                {
                  "type":"project",
                  "ids":["43"]
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "authorizables": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "permissions":[{
                  "authorizable":{
                    "type":"datasource",
                    "id":"47"
                  },
                  "grantee":{
                    "type":"user",
                    "id":"14"
                  },
                  "permissions":[{
                    "capability":"read",
                    "value":"allowed",
                    "reason":""
                  },
                  {
                    "capability":"write",
                    "value":"allowed",
                    "reason":""
                  }
                  ]
                }],
                "users":[{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                }],
                "groups":[{
                  "name":"All Users",
                  "id":"2",
                  "userCount":18,
                  "isAllUsersGroup":true
                }],
                "sourceAuthorizableById":{
                  "47":{
                    "id":"47",
                    "name":"Sample - Superstore"
                    "type":"datasource"
                  }
                }
              }
            }


## Set Explicit Permissions [/vizportal/api/web/v1/setExplicitPermissions]

### Set Explicit Permissions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setExplicitPermissions",
              "params":
              {
                "permissions":
                [
                  {
                    "authorizable":
                      {
                        "type":"project",
                        "id":"43"
                      },
                    "grantee":
                      {
                        "type":"group",
                        "id":"2"
                      },
                    "permissions":
                      [
                        {
                          "capability":"read",
                          "value":"allowed"
                        }
                      ]
                  }
                ]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "authorizable": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "id": {
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "grantee": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string"
                              },
                              "id": {
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "capability": {
                                  "type": "string"
                                },
                                "value": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Content Controlled Permissions [/vizportal/api/web/v1/setContentControlledPermissions]

### Set Content Controlled Permissions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setContentControlledPermissions",
              "params":
              {
                "ids":["46"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Project Controlled Permissions [/vizportal/api/web/v1/setProjectControlledPermissions]

### Set Project Controlled Permissions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setProjectControlledPermissions",
              "params":
              {
                "ids":["46"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Projects

##

## Create Project [/vizportal/api/web/v1/createProject]

### Create Project [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "createProject",
              "params":
              {
                "name":"ProjectName"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "id":47
              }
            }

## Delete Projects [/vizportal/api/web/v1/deleteProjects]

### Delete Projects [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteProjects",
              "params":
              {
                "ids":["43"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Project Actions [/vizportal/api/web/v1/getProjectActions]

### Get Project Actions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getProjectActions",
              "params":
              {
                "id":"21"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "setName":true,
                "del":true,
                "setDescription":true,
                "setPermissions":true,
                "setOwner":true
              }
            }


## Get Project [/vizportal/api/web/v1/getProject]

### Get Project [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getProject",
              "params":
              {
                "id":"21"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "name":"Demos",
                "id":"4",
                "owner":{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                },
                "description":"Demo/sample dashboards",
                "updatedAt":"2013-06-07T13:26:53.937Z",
                "createdAt":"2013-06-07T13:26:53.937Z",
                "controlledPermissionsEnabled":false
              }
            }


## Get Projects [/vizportal/api/web/v1/getProjects]

### Get Projects [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getProjects",
              "params":
              {
                "order":
                [
                  {
                    "field":"name",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
            "result":
              {
                "totalCount": 26,
                "moreItems": false,
                "projects":[{
                  "name":"APITest"
                  "id":"21",
                  "description":"",
                  "ownerId":"5",
                  "viewCount":2,
                  "createdAt":"2016-12-23T16:54:07.739Z",
                  "controlledPermissionsEnabled":false,
                  "workbookCount":1,
                  "datasourceCount":0
                }
                ],
                "users":[{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                }
                ]
              }
            }


## Set Project Description [/vizportal/api/web/v1/setProjectDescription]

### Set Project Description [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setProjectDescription",
              "params":
              {
                "id":"43",
                "description":"Description Goes Here"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Project Name [/vizportal/api/web/v1/setProjectName]

### Set Project Name [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setProjectName",
              "params":
              {
                "id":"43",
                "name":"Name of Project"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Projects Owner [/vizportal/api/web/v1/setProjectsOwner]

### Set Projects Owner [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setProjectsOwner",
              "params":
              {
                "ids":["43"],
                "ownerId":"73"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "ownerId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Project Names [/vizportal/api/web/v1/getProjectNames]

### Get Project Names [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getProjectNames",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                    [
                    {
                      "operator":"eq",
                      "field":"id",
                      "value":"21"
                    }
                    ]
                },
                "page":
                {
                  "startIndex":0,
                  "maxItems":1
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Schedules

##

## Delete Schedules [/vizportal/api/web/v1/deleteSchedules]

### Delete Schedules [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "deleteSchedules",
              "params":
              {
                "ids":["10"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Remote Refresh Schedules [/vizportal/api/web/v1/getRemoteRefreshSchedules]

### Get Remote Refresh Schedules [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getRemoteRefreshSchedules",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"eq",
                      "field":"datasourceId",
                      "value":"1018"
                    }
                  ]
                },
                "order":
                  [
                    {
                      "field":"runNextAt",
                      "ascending":true
                    }
                  ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":0,
                "moreItems":false
              }
            }

## Get Schedules [/vizportal/api/web/v1/getSchedules]

### Get Schedules [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSchedules",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                    [
                      {
                        "operator":"eq",
                        "field":"datasourceId",
                        "value":"1018"
                      }
                    ]
                },
                "order":
                [
                  {
                    "field":"runNextAt",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":2,
                "moreItems":false,
                "schedules":[{
                  "name":"4th of the Month",
                  "id":"42",
                  "priority":50,
                  "runNextAt":"2017-02-04T00:00:00.000-05:00",
                  "taskCount":0,
                  "parallel":false,
                  "serverTimezonOffset":-300,
                  "scheduledAction":"Extract",
                  "scheduleDetails":{
                    "startTime":0,
                    "recurrencyDayOfMonth":"4"
                  },
                  "scheduleType":"Monthly"
                },
                {
                  "name":"Weekday early mornings",
                  "id":"1",
                  "priority":50,
                  "runNextAt":"2017-01-09T00:00:00.000-05:00",
                  "taskCount":3,
                  "parallel":true,
                  "serverTimezonOffset":-300,
                  "scheduledAction":"Extract",
                  "scheduleDetails":{
                    "startTime":240,
                    "recurrencyDaysOfWeek":["Mon","Tue","Wed","Thu","Fri"]
                  },
                  "scheduleType":"Weekly"
                }
                ]
              }
            }


## Set Schedule Name [/vizportal/api/web/v1/setScheduleName]

### Set Schedule Name [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setScheduleName",
              "params":
              {
                "id":"43",
                "name":"Every Hour"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Create Schedule [/vizportal/api/web/v1/createSchedule]

### Create Schedule [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"createSchedule",
              "params":
              {
                "name":"Name of Schedule",
                "priority":50,
                "scheduleType":"Hourly",
                "parallel":true,
                "scheduleAction":"Extract",
                "scheduleDetails":
                {
                  "startTime":0,
                  "endTime":0,
                  "recurrenceMinutes":60
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "priority": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "scheduleType": {
                      "type": "string"
                    },
                    "parallel": {
                      "type": "boolean"
                    },
                    "scheduleAction": {
                      "type": "string"
                    },
                    "scheduleDetails": {
                      "type": "object",
                      "properties": {
                        "startTime": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "endTime": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "recurrenceMinutes": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Run Server Schedules [/vizportal/api/web/v1/runServerSchedules]

### Run Server Schedules [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"runServerSchedules",
              "params":
              {
                "ids":["23"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Enabled Status for Schedules [/vizportal/api/web/v1/setEnabledStatusForSchedules]

### Set Enabled Status for Schedules [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setEnabledStatusForSchedules",
              "params":
              {
                "ids":["42"],
                "enabled":true
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Server Settings

##

## Get Licensing Info [/vizportal/api/web/v1/getLicensingInfo]

### Get Licensing Info [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getLicensingInfo",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "isCore":false,
                "productKeyInfo":[{
                  "serial":"TS0D-XXXX-XXXX-XXXX-XXXX",
                  "numSeats":10,
                  "maintenance":"2017-03-01T12:00:00.462Z",
                  "expiration":"2017-03-01T12:00:00.462Z",
                  "isValid":true,
                  "isGuestAllowed":false
                }],
                "seatLicensingInfo":{
                  "numLicensedUsers":9,
                  "numRemainingSeats":1,
                  "numUnlicensedUsers":13,
                  "isGuest":false
                }
              }
            }

## Get Server Info [/vizportal/api/web/v1/getServerInfo]

### Get Server Info [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getServerInfo",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Server Settings [/vizportal/api/web/v1/getServerSettings]

### Get Server Settings [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getServerSettings",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "serverSettings":{
                  "defaultLocale":"en_US",
                  "savedPasswordEnabled":false,
                  "scheduledActiveDirectorySyncEnabled":false,
                  "schedulingEnabled":true,
                  "savedAccessTokensEnabled":false,
                  "embeddedCredentialsEnabled":true,
                  "defaultStartPage":"",
                  "refreshTokenEnabled":true,
                  "defaultLanguage":"en",
                  "activeDirectorySyncScheduleFrequency":{
                    "scheduleDetails":{
                      "startTime":0
                    },
                    "scheduleType":"Daily"
                  }
                }
              }
            }


## Get Worker Process Status [/vizportal/api/web/v1/getWorkerProcessStatus]

### Get Worker Process Status [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getWorkerProcessStatus",
              "params":
              {
                "process":
                {
                  "type":"gateway",
                  "host":"WIN-XXXXXX",
                  "port":":8000",
                  "preferred":false
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "process": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "host": {
                          "type": "string"
                        },
                        "port": {
                          "type": "string"
                        },
                        "preferred": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Ziplog [/vizportal/api/web/v1/deleteZiplog]

### Delete Ziplog [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteZiplog",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Generate Ziplog [/vizportal/api/web/v1/generateZiplog]

### Generate Ziplog [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"generateZiplog",
              "params":
              {
                "logsUpToDate":0
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "logsUpToDate": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Ziplog Uri [/vizportal/api/web/v1/getZiplogUri]

### Get Ziplog Uri [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getZiplogUri",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Rebuild Search Index [/vizportal/api/web/v1/rebuildSearchIndex]

### Rebuild Search Index [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"rebuildSearchIndex",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Boolean Server Setting [/vizportal/api/web/v1/updateBooleanServerSetting]

### Update Boolean Server Setting [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateBooleanServerSetting",
              "params":
              {
                "setting":"embeddedCredentialsEnabled",
                "value":true
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "setting": {
                      "type": "string"
                    },
                    "value": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Schedule Frequency Server Setting [/vizportal/api/web/v1/updateScheduleFrequencyServerSetting]

### Update Schedule Frequency Server Setting [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "updateScheduleFrequencyServerSetting",
              "params":
              {
                "setting":"activeDirectorySyncScheduleFrequency",
                "value":
                {
                  "scheduleType":"Daily",
                  "scheduleDetails":
                  {
                    "startTime":0
                  }
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "setting": {
                      "type": "string"
                    },
                    "value": {
                      "type": "object",
                      "properties": {
                        "scheduleType": {
                          "type": "string"
                        },
                        "scheduleDetails": {
                          "type": "object",
                          "properties": {
                            "startTime": {
                              "type": "integer",
                              "format": "int64"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update String Server Setting [/vizportal/api/web/v1/updateStringServerSetting]

### Update String Server Setting [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateStringServerSetting",
              "params":
              {
                "setting":"defaultLanguage",
                "value":"en"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "setting": {
                      "type": "string"
                    },
                    "value": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Sites

##

## Get Site Names Across All Pods [/vizportal/api/web/v1/getSiteNamesAcrossAllPods]

### Get Site Names Across All Pods [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSiteNamesAcrossAllPods",
              "params":
              {
                "page":
                {
                  "startIndex":0,
                  "maxItems":1000
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "startIndex": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "maxItem": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":3,
                "moreItems":false,
                "siteNames":[{
                  "name":"Canada",
                  "urlName":"canada"
                },
                {
                  "name":"Default",
                  "urlName":""
                },
                {
                  "name":"US",
                  "urlName":"us"
                }
                ]
              }
            }

## Get Site Names [/vizportal/api/web/v1/getSiteNames]

### Get Site Names [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSiteNames",
              "params":
              {
                "page":
                {
                  "startIndex":0,
                  "maxItems":18
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "startIndex": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "maxItem": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Site Settings For Server Admin [/vizportal/api/web/v1/getSiteSettingsForServerAdmin]

### Get Site Settings For Server Admin [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSiteSettingsForServerAdmin",
              "params":
              {
                "id":"1"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "id":"1",
                "settings":{
                  "urlName":"",
                  "name":"Default",
                  "storageQuotaEnabled":false,
                  "siteAdminsCanAddUsers":true,
                  "userQuotaEnabled":false,
                  "metricsEnabled":true,
                  "authoringEnabled":true,
                  "sheetImageEnabled":true,
                  "versionHistoryEnabled":true,
                  "contentVersionLimitEnabled":true,
                  "contentVersionLimit":25
                },
                "userCount":17,
                "adminCount":2,
                "availability":"active",
                "licensedUserCount":5,
                "siteAdminSettings":{
                  "liveDBConnectionsWhitelistEnabled":false,
                  "refreshTokenEnabled":true,
                  "refreshFailureNotificationEnabled":true
                },
                "storageUsedBytes":3843741466
              }
            }


## Get Site Settings for Site Admin [/vizportal/api/web/v1/getSiteSettingsForSiteAdmin]

### Get Site Settings for Site Admin [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSiteSettingsForSiteAdmin",
              "params":
              {
                "id":"1"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "id":"1",
                "siteAdminSettings":{
                  "liveDBConnectionsWhitelistEnabled":false,
                  "refreshTokenEnabled":true,
                  "refreshFailureNotificationEnabled":true
                }
              }
            }


## Get Sites [/vizportal/api/web/v1/getSites]

### Get Sites [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSites",
              "params":
              {
                "order":
                [
                  {
                    "field":"name",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":20
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":1,
                "moreItems":false,
                "sites":[{
                  "id":"1",
                  "settings":{
                    "urlName":"",
                    "name":"Default",
                    "storageQuotaEnabled":false,
                    "siteAdminsCanAddUsers":true,
                    "userQuotaEnabled":false,
                    "metricsEnabled":true,
                    "authoringEnabled":true,
                    "sheetImageEnabled":true,
                    "versionHistoryEnabled":true,
                    "contentVersionLimitEnabled":true,
                    "contentVersionLimit":25
                  }
                }]
              }
            }

## Get Site Users [/vizportal/api/web/v1/getSiteUsers]

### Get Site Users [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSiteUsers",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"eq",
                      "field":"siteRole",
                      "value":"ServerAdministrator"
                    }
                  ]
                },
                "order":
                [
                  {
                    "field":"displayName",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Switch Site [/vizportal/api/web/v1/switchSite]

### Switch Site [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"switchSite",
              "params":
              {
                "urlName":"test"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "urlName": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
            "result":
              {
                "server":
                  {
                    "defaultDomain": "local",
                    "version":
                      {
                        "bitness": "64",
                        "build": "10000.16.1004.1720",
                        "externalVersion":
                          {
                            "major": "10",
                            "minor": "0",
                            "patch": "2"
                          }
                      },
                    "siteCustomizationEnabled": false,
                    "featureFlags":
                      {
                        "ha2Enabled": true,
                        "alertOnThresholdConditionEnabled": false,
                        "subscribeOnExtractRefreshEnabled": false,
                        "workbookVersionHistoryContentVersionLimitEnabled": true,
                        "dataSyncEnabled": false,
                        "contentDiscoveryPhase3Enabled": false,
                        "integratedDatasourcesUIEnabled": true,
                        "contentDiscoveryPhase2Enabled": true,
                        "desktopReportingEnabled": false,
                        "oauthWDCServerRefreshEnabled": true,
                        "contentDiscoveryPhase1Enabled": true,
                        "subscribeOthersEnabled": true,
                        "alertWhenDataPresentEnabled": false,
                        "workbookVersionHistoryViewDownloadDeleteEnabled": true,
                        "datasourceVersionHistoryViewDownloadDeleteEnabled": true,
                        "dataSyncLaunchFromWebEnabled": true,
                        "ha2FilestoreEnabled": true,
                        "dataIntegrationEnabled": true,
                        "connectedClientsTableEnabled": true,
                        "workbookVersionHistoryEnabled": true,
                        "lowDiskSpaceEnabled": true,
                        "oauthQuickBooksWDCServerRefreshEnabled": true
                      },
                    "oauthSalesforceEnabled": false,
                    "oauthQuickBooksEnabled": false,
                    "oauthGoogleEnabled": false,
                    "displaySchedulesInClientTimezone": true,
                    "refreshFailureNotificationEnabledForServer": true,
                    "displayScheduleDescriptionAsName": false,
                    "helpEdition": "server",
                    "supportHost": "",
                    "supportPath": "",
                    "datasourceHelpUrl": "",
                    "updateEmailAllowed": true,
                    "updateDisplayNameAllowed": true,
                    "sessionIdleLimitSeconds": 240,
                    "tabAdminServiceEnabled": true,
                    "alertLookBackDaysLimit": 14,
                    "siteAdminSettingsEnabled": false,
                    "defaultSubscriptionsEmail": "",
                    "logicalServerInstanceId": "",
                    "offlineHelpEnabled": false,
                    "rebuildingSearchIndex": false,
                    "alertFailureCountThreshold": 5
                  },
                "site":
                  {
                    "name": "Default",
                    "id": "1",
                    "role": "Publisher",
                    "luid": "ff66e08b-e7b4-4759-b21f-1fdc0e0885f9",
                    "urlName": "",
                    "refreshFailureNotificationEnabled": true,
                    "logoutEnabled": true,
                    "thirdPartyAuthState":
                      {
                        "enabled": false,
                        "allowed": false,
                        "serverEnabled": false,
                        "hasThirdPartyAuthenticatedUsers": false
                      },
                    "versioningEnabled": true,
                    "liveDBAvailable": false
                  },
                "user":
                  {
                    "language": "en",
                    "id": "5",
                    "displayName": "Admin",
                    "locale": "en_US",
                    "username": "Admin",
                    "domainName": "local",
                    "displayMode": "list",
                    "startPage": "/",
                    "serverAdmin": true,
                    "numberOfSites": 7,
                    "canManageUsers": true
                  },
                "isRestrictedTrustedTicketSession": false
              }
            }


## Create Site [/vizportal/api/web/v1/createSite]

### Create Site [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"createSite",
              "params":
              {
                "settings":
                  {
                      "urlName":"APITest",
                      "name":"APITest",
                      "storageQuotaEnabled":false,
                      "storageQuotaBytes":null,
                      "siteAdminsCanAddUsers":true,
                      "userQuotaEnabled":false,
                      "userQuota":null,
                      "metricsEnabled":false,
                      "authoringEnabled":true,
                      "sheetImageEnabled":true,
                      "versionHistoryEnabled":true,
                      "contentVersionLimitEnabled":true,
                      "contentVersionLimit":25
                  },
                "siteAdminSettings":
                  {
                      "liveDBConnectionsWhitelistEnabled":false,
                      "refreshTokenEnabled":true,
                      "refreshFailureNotificationEnabled":true
                  }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "settings": {
                      "type": "object",
                      "properties": {
                        "urlName": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "storageQuotaEnabled": {
                          "type": "boolean"
                        },
                        "storageQuotaBytes": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "siteAdminsCanAddUsers": {
                          "type": "boolean"
                        },
                        "userQuotaEnabled": {
                          "type": "boolean"
                        },
                        "userQuota": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "metricsEnabled": {
                          "type": "boolean"
                        },
                        "authoringEnabled": {
                          "type": "boolean"
                        },
                        "sheetImageEnabled": {
                          "type": "boolean"
                        },
                        "versionHistoryEnabled": {
                          "type": "boolean"
                        },
                        "contentVersionLimitEnabled": {
                          "type": "boolean"
                        },
                        "contentVersionLimit": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    },
                    "siteAdminSettings": {
                      "type": "object",
                      "properties": {
                        "liveDBConnectionsWhitelistEnabled": {
                          "type": "boolean"
                        },
                        "refreshTokenEnabled": {
                          "type": "boolean"
                        },
                        "refreshFailureNotificationEnabled": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Sites [/vizportal/api/web/v1/deleteSites]

### Delete Sites [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteSites",
              "params":
              {
                "ids":["9"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Subscriptions

##

## Get Subscriptions [/vizportal/api/web/v1/getSubscriptions]

### Get Subscriptions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSubscriptions",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"eq",
                      "field":"siteId",
                      "value":"1"
                    }
                  ]
                },
                "order":
                [
                  {
                    "field":"name",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":0,
                "moreItems":false,
                "subscriptions":[],
                "schedules":[],
                "sites":[],
                "users":[]
              }
            }


# Group Tags

##

## Add Tags to Datasources [/vizportal/api/web/v1/addTagsToDatasources]

### Add Tags to Datasources [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"addTagsToDatasources",
              "params":
              {
                "ids":["47"],
                "tags":["\"Superstore\""]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Add Tags to Views [/vizportal/api/web/v1/addTagsToViews]

### Add Tags to Views [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"addTagsToViews",
              "params":
              {
                "ids":["21"],
                "tags":["\"Sales\""]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Add Tags to Workbooks [/vizportal/api/web/v1/addTagsToWorkbooks]

### Add Tags to Workbooks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"addTagsToWorkbooks",
              "params":
              {
                "ids":["700"],
                "tags":["\"HR\""]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Tags [/vizportal/api/web/v1/getTags]

### Get Tags [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getTags",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"matches",
                      "value":"w"
                    }
                  ]
                },
                "order":
                [
                  {
                    "field":"name",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":8
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Remove Tags From Datasources [/vizportal/api/web/v1/removeTagsFromDatasources]

### Remove Tags From Datasources [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "removeTagsFromDatasources",
              "params":
              {
                "ids":["47"],
                "tags":["\"Superstore\""]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Remove Tags From Views [/vizportal/api/web/v1/removeTagsFromViews]

### Remove Tags From Views [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "removeTagsFromViews",
              "params":
              {
                "ids":["840"],
                "tags":["\"Sales\""]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Remove Tags From Workbooks [/vizportal/api/web/v1/removeTagsFromWorkbooks]

### Remove Tags From Workbooks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "removeTagsFromWorkbooks",
              "params":
              {
                "ids":["42"],
                "tags":["\"HR\""]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "tags": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Users

##

## Change User Password [/vizportal/api/web/v1/changeUserPassword]

### Change User Password [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"changeUserPassword",
              "params":
              {
                "userId":"50",
                "oldEncryptedPassword":"Some String",
                "keyId":"Another String"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "oldEncryptedPassword": {
                      "type": "string"
                    },
                    "keyId": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Check User Names [/vizportal/api/web/v1/checkUserNames]

### Check User Names [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"checkUserNames",
              "params":
              {
                "usernames":["User to Check For"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "usernames": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Create Local User [/vizportal/api/web/v1/createLocalUser]

### Create Local User [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"createLocalUser",
              "params":
              {
                "username":"TestUser",
                "displayName":"Test User",
                "email":"user@domain.com",
                "encryptedPassword":"Some String",
                "keyId":"Another String",
                "admin":null,
                "siteRole":"Viewer"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "displayname": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "encryptedPassword": {
                      "type": "string"
                    },
                    "keyId": {
                      "type": "string"
                    },
                    "admin": {
                      "type": "string"
                    },
                    "siteRole": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete My Saved Password & Credentials [/vizportal/api/web/v1/deleteMySavedPasswordAndCredentials]

### Delete My Saved Password & Credentials [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteMySavedPasswordAndCredentials",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Server Users [/vizportal/api/web/v1/deleteServerUsers]

### Delete Server Users [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteServerUsers",
              "params":
              {
                "ids":["50"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Users [/vizportal/api/web/v1/deleteUsers]

### Delete Users [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "deleteUsers",
              "params":
              {
                "ids":["88"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Server Users [/vizportal/api/web/v1/getServerUsers]

### Get Server Users [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getServerUsers",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"eq",
                      "field":"maxSiteRole",
                      "value":"ServerAdministrator"
                    }
                  ]
                },
                "order":
                [
                  {
                    "field":"displayName",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get User Alert Count [/vizportal/api/web/v1/getUserAlertCount]

###  Get User Alert Count [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getUserAlertCount",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "totalCount":2
              }
            }


## Get User Connected Devices [/vizportal/api/web/v1/getUserConnectedDevices]

### Get User Connected Devices [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getUserConnectedDevices",
              "params":
              {
                "userId":"5"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Users Group Membership [/vizportal/api/web/v1/getUsersGroupMembership]

### Get Users Group Membership [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getUsersGroupMembership",
              "params":
              {
                "userIds":["27","6","25"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Users [/vizportal/api/web/v1/getUsers]

### Get Users [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getUsers",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"has",
                      "field":"groupIds",
                      "value":2
                    }
                  ]
                },
                "order":
                [
                  {
                    "field":"displayName",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":18
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Users Site Roles [/vizportal/api/web/v1/getUsersSiteRoles]

### Get Users Sites Roles [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getUsersSiteRoles",
              "params":
              {
                "ids":["27"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Refresh Failure Notification Setting [/vizportal/api/web/v1/updateRefreshFailureNotificationSetting]

### Update Refresh Failure Notification Setting [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateRefreshFailureNotificationSetting",
              "params":
              {
                "userId":"113",
                "enabled":false
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "enabled": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Server Users Admin Status [/vizportal/api/web/v1/updateServerUsersAdminStatus]

### Update Server Users Admin Status [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateServerUsersAdminStatus",
              "params":
              {
                "userIds":["50"],
                "admin":true
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "admin": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Server Users Site Membership [/vizportal/api/web/v1/updateServerUsersSiteMembership]

### Update Server Users Site Membership [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateServerUsersSiteMembership",
              "params":
              {
                "userIds":["50"],
                "addToSiteRoles":
                  [
                    {
                      "siteId":"1",
                      "siteRole":"siteAdministrator"
                    }
                  ],
                "removeFromSiteIds":[]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "addToSiteRoles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "siteId": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "siteRole": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "removeFromSiteIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update User Display Name [/vizportal/api/web/v1/updateUserDisplayName]

### Update User Display Name [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateUserDisplayName",
              "params":
              {
                "userId":"50",
                "displayName":"Test User 2"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "displayName": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update User Email [/vizportal/api/web/v1/updateUserEmail]

### Update User Email [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "updateUserEmail",
              "params":
              {
                "userId":"50",
                "email":"test@test.com"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "email": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update User Language [/vizportal/api/web/v1/updateUserLanguage]

### Update User Language [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateUserLanguage",
              "params":
              {
                "userId":"50",
                "language":"en"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "language": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update User Locale [/vizportal/api/web/v1/updateUserLocale]

### Update User Locale [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateUserLocale",
              "params":
              {
                "userId":"50",
                "locale":"en_US"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "locale": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update User Local Time Zone Data [/vizportal/api/web/v1/updateUserLocalTimeZoneData]

### Update User Local Time Zone Data [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateUserLocalTimeZoneData",
              "params":
              {
                "offset":480,
                "dateString":"Thu Dec 15 2016 08:48:42 GMT-0800 (PST)"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "offset": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "dateString": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
            "result": {}
            }


## Update User Group Membership [/vizportal/api/web/v1/updateUserGroupMembership]

### Update User Group Membership [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "updateUserGroupMembership",
              "params":
              {
                "userIds":["113"],
                "addToGroupIds":["9"],
                "removeFromGroupIds":[]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "addToGroupIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "removeFromGroupIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Users Site Role [/vizportal/api/web/v1/updateUsersSiteRole]

### Update Users Site Role [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateUsersSiteRole",
              "params":
              {
                "userIds":["113"],
                "siteRole": "Interactor"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userIds": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "siteRole": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update User Start Page [/vizportal/api/web/v1/updateUserStartPage]

### Update User Start Page [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"updateUserStartPage",
              "params":
              {
                "startPage":"/projects"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "startPage": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get User Settings [/vizportal/api/web/v1/getUserSettings]

### Get User Settings [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getUserSettings",
              "params":
              {
                "username":"Admin",
                "domainName":"local"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "username": {
                      "type": "string"
                    },
                    "domainName": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get User Alert List [/vizportal/api/web/v1/getUserAlertList]

### Get User Alert List [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getUserAlertList",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete User Refresh Tokens [/vizportal/api/web/v1/deleteUserRefreshTokens]

### Delete User Refresh Tokens [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteUserRefreshTokens",
              "params":
              {
                "userId":"5"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "userId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Views

##

## Get View Actions [/vizportal/api/web/v1/getViewActions]

### Get View Actions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getViewActions",
              "params":
              {
                "id":"1594"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "seeComments":true,
                "launchWebAuthoring":true,
                "del":true,
                "setTags":true,
                "setPermissions":true,
                "addComment":true
              }
            }


## Get View by Path [/vizportal/api/web/v1/getViewByPath]

### Get View by Path [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getViewByPath",
              "params":
              {
                "path":"WorkbookName/ViewName"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "name":"Teams",
                "id":"1568",
                "path":"wellness_challenge/Teams",
                "owner":{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                },
                "index":"1",
                "tags":[],
                "updatedAt":"2015-03-24T12:02:47.710Z",
                "createdAt":"2015-03-24T12:02:47.679Z",
                "project":{
                  "name":"Wellness",
                  "id":"26"
                },
                "workbook":{
                  "name":"wellness_challenge",
                  "id":"462",
                  "ownerId":"5",
                  "displayTabs":true,
                  "projectId":"26",
                  "sheetCount":2
                },
                "hitsTimeSeries":[
                  0,1,1,0,0,0,0,0,0,0,0,0
                ],
                "favorite":true,
                "thumbnailUrl":"vizportal/api/rest/v1/views/1568/thumbnail?1427198567710",
                "editUrl":"/authoring/wellness_challenge/Teams"
              }
            }

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Views [/vizportal/api/web/v1/getViews]

### Get Views [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getViews",
              "params":
              {
                "order":
                [
                  {
                    "field":"hitsTotal",
                    "ascending":false
                  },
                  {
                    "field":"name",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result": {
                "totalCount":639,
                "moreItems":true,
                "views":[{
                  "name":"Teams",
                  "id":"1568",
                  "path":"wellness_challenge/Teams",
                  "index":"1",
                  "updatedAt":"2015-03-24T12:02:47.710Z",
                  "worbookId":"462",
                  "usageInfo":{
                    "favoritesTotal":1,
                    "hitsLastThreeMonthsTotal":1,
                    "hitsLastOneMonthTotal":0,
                    "hitsLastTwelveMonthsTotal":2,
                    "hitsTotal":872
                  },
                  "thumbnailUrl":"vizportal/api/rest/v1/views/1568/thumbnail?1427198567710"
                }],
                "workbooks":[{
                  "name":"World Indicators",
                  "id":"1",
                  "ownerId":"4",
                  "displayTabs":true,
                  "projectId":"2",
                  "sheetCount":7
                }
                ],
                "users":[{
                  "id":"15",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                }
                ],
                "projects":[{
                  "name":"Default",
                  "id":"17"
                }
                ],
                "favorites":[
                "1568"
                ],
                "maxStats":{
                  "hitsLastOneMonthTotal":87,
                  "hitsLastThreeMonthsTotal":419,
                  "hitsLastTwelveMonthsTotal":422,
                  "hitsTotal":872,
                  "favoritesTotal":1
                }
              }
            }


# Group Workbooks

##

## Get Workbook Actions [/vizportal/api/web/v1/getWorkbookActions]

### Get Workbook Actions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getWorkbookActions",
              "params":
              {
                "id":"700"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "setName":true,
                "launchWebAuthoring":true,
                "download":true,
                "setDisplayTabs":true,
                "refreshExtract":true,
                "setProject":true,
                "del":true,
                "versionManagement":true,
                "setTags":true,
                "setDescription":true,
                "setPermissions":true,
                "setOwner":true
              }
            }


## Get Workbook [/vizportal/api/web/v1/getWorkbook]

### Get Workbook [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getWorkbook",
              "params":
              {
                "id":"699"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Workbooks [/vizportal/api/web/v1/getWorkbooks]

### Get Workbooks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getWorkbooks",
              "params":
              {
                "order":
                [
                  {
                    "field":"hitsTotal",
                    "ascending":false
                  },
                  {
                    "field":"name",
                    "ascending":true
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":0
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
            "result":
              {
                "totalCount": 175,
                "moreItems": false,
                "workbooks":[{
                  "name":"wellness_challenge",
                  "id":"462",
                  "size":101998,
                  "ownerId":"5",
                  "displayTabs":true,
                  "updatedAt":"2015-03-24T12:02:47.804Z",
                  "defaultViewId":"1568",
                  "repositoryUrl":"wellness_challenge",
                  "projectId":"26",
                  "defaultViewUrl":"wellness_challenge/Teams",
                  "usageInfo":{
                    "favoritesTotal":0,
                    "hitsLastThreeMonthsTotal":2,
                    "hitsLastOneMonthTotal":1,
                    "hitsLastTwelveMonthsTotal":3,
                    "subscriptionsTotal":0,
                    "hitsTotal":1234
                  },
                  "downloadUrl":"/workbooks/wellness_challenge.twb",
                  "thumbnailUrl":"vizportal/api/rest/v1/workbooks/462/thumbnail?1427198567804",
                  "hasExtracts":false,
                  "hasAlert":false,
                  "sheetCount":2
                }],
                "users":[{
                  "id":"5",
                  "readOnly":false,
                  "displayName":"Admin",
                  "username":"Admin",
                  "domainName":"local",
                  "serverAdmin":true
                }],
                "projects":[{
                  "name":"Default",
                  "id":"17"
                }],
                "favorites":[],
                "maxStats":{
                  "hitsLastOneMonthTotal":183,
                  "hitsLastThreeMonthsTotal":419,
                  "hitsLastTwelveMonthsTotal":423,
                  "hitsTotal":1234,
                  "favoritesTotal":1,
                  "subscriptionsTotal":0
                }
              }
            }


## Get Workbook Versions [/vizportal/api/web/v1/getWorkbookVersions]

### Get Workbook Verions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getWorkbookVersions",
              "params":
              {
                "filter":
                {
                  "operator":"and",
                  "clauses":
                  [
                    {
                      "operator":"eq",
                      "field":"workbookId",
                      "value":"462"
                    }
                  ]
                },
                "order":
                [
                  {
                    "field":"versionNumber",
                    "ascending":false
                  }
                ],
                "page":
                {
                  "startIndex":0,
                  "maxItems":1000
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "operator": {
                          "type": "string"
                        },
                        "clauses": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "operator": {
                                "type": "string"
                              },
                              "field": {
                                "type": "string"
                              },
                              "value": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    },
                    "order": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "field": {
                            "type": "string"
                          },
                          "ascending": {
                            "type": "boolean"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Workbook Description [/vizportal/api/web/v1/setWorkbookDescription]

### Set Workbook Description [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "setWorkbookDescription",
              "params":
              {
                "id":"699",
                "description":"Workbook Description Text"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Workbooks Owner [/vizportal/api/web/v1/setWorkbooksOwner]

### Set Workbooks Owner [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setWorkbooksOwner",
              "params":
              {
                "ids":["699"],
                "ownerId":"5"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "ownerId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Workbooks [/vizportal/api/web/v1/deleteWorkbooks]

### Delete Workbooks [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteWorkbooks",
              "params": {
                "ids": [
                "728"
                ]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Delete Workbook Versions [/vizportal/api/web/v1/deleteWorkbookVersions]

### Delete Workbook Versions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"deleteWorkbookVersions",
              "params":
              {
                "ids":["728@1"]
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Move Workbooks to Proejct [/vizportal/api/web/v1/moveWorkbooksToProject]

### Move Workbooks to Project [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"moveWorkbooksToProject",
              "params":
              {
                "ids":["699"],
                "projectId":"20"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "projectId": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Set Display Tabs [/vizportal/api/web/v1/setDisplayTabs]

### Set Display Tabs [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"setDisplayTabs",
              "params":
              {
                "ids":["728"],
                "displayTabs":false
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "integer",
                        "format": "int64"
                      }
                    },
                    "displayTabs": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Update Display Mode [/vizportal/api/web/v1/updateDisplayMode]

### Update Display Mode [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "updateDisplayMode",
              "params":
              {
                "displayMode":"thumbnail"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "displayMode": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

# Group Uncategorized

##

## Get Actionable Objects [/vizportal/api/web/v1/getActionableObjects]

### Get Actionable Objects [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getActionableObjects",
              "params":
              {
                "authorizables":
                {
                  "type":"project",
                  "ids":["43"]
                }
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "authorizables": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "ids": {
                          "type": "array",
                          "items": {
                            "type": "integer",
                            "format": "int64"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Action Info [/vizportal/api/web/v1/getActionInfo]

### Get Action Info [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getActionInfo",
              "params":
              {
                "actionType":"rebuildSearchIndex"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "actionType": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "actions":[{
                  "id":"36",
                  "state":"completed",
                  "type":"editConnections",
                  "response":{},
                  "succeeded":true,
                  "percentComplete":100
                }]
              }
            }


## Get Getting Started Notifications [/vizportal/api/web/v1/getGettingStartedNotifications]

### Get Getting Started Notifications [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getGettingStartedNotifications",
              "params":
              {
                "checkUserPrefs":false
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "checkUserPrefs": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "contentUrl":""
              }
            }


## Get Languages [/vizportal/api/web/v1/getLanguages]

### Get Languages [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getLanguages",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "languages":[{
                  "language":"en",
                  "displayName":"English",
                  "locale":"en_US"
                },
                {
                  "language":"fr",
                  "displayName":"Francais",
                  "locale":"fr_FR"
                },
                {
                  "language":"es",
                  "displayName":"Espanol",
                  "locale":"es_ES"
                }
                ]
              }
            }

## Get Locales [/vizportal/api/web/v1/getLocales]

### Get Locales [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getLocales",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "locales":[
                {
                  "displayName":"Albanian (Albania)",
                  "locale":"sq_AL"
                },
                {
                  "displayName":"Arabic (Algeria)",
                  "locale":"ar_DZ"
                }
                ]
              }
            }


## Get Num Excess Revisions [/vizportal/api/web/v1/getNumExcessRevisions]

### Get Num Excess Revisions [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method": "getNumExcessRevisions",
              "params":
              {
                "limit":25
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "limit": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Remaining User Quota [/vizportal/api/web/v1/getRemainingUserQuota]

### Get Remaining User Quota [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getRemainingUserQuota",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Session Info [/vizportal/api/web/v1/getSessionInfo]

### Get Session Info [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getSessionInfo",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "server":{
                  "defaultDomain":"local",
                  "version":{
                    "bitness":"64",
                    "build":"10000.16.1004.1720",
                    "externalVersion":{
                      "major":"10",
                      "minor":"0",
                      "patch":"2"
                    }
                  },
                  "siteCustomizationEnabled":false,
                  "featureFlags":{
                    "ha2Enabled":"true",
                    "alertOnThresholdConditionEnabled":false,
                    "subscribeOnExtractRefreshEnabled":false,
                    "workbookVersionHistoryContentVersionLimitEnabled":true,
                    "dataSyncEnabled":false,
                    "contentDiscoveryPhase3Enabled":false,
                    "integratedDatasourcesUIEnabled":true,
                    "contentDiscoveryPhase2Enabled":true,
                    "desktopReportingEnabled":false,
                    "oauthWDCServerRefreshEnabled":true,
                    "contentDiscoveryPhase1Enabled":true,
                    "subscribeOthersEnabled":true,
                    "alertWhenDataPresentEnabled":false,
                    "workbookVersionHistoryViewDownloadDeleteEnabled":true,
                    "datasourceVersionHistoryViewDownloadDeleteEnabled":true,
                    "dataSyncLaunchFromWebEnabled":true,
                    "ha2FilestoreEnabled":true,
                    "dataIntegrationEnabled":true,
                    "connectedClientsTableEnabled":true,
                    "workbookVersionHistoryEnabled":true,
                    "lowDiskSpaceEnabled":true,
                    "oauthQuickBooksWDCServerRefreshEnabled":true
                  },
                  "oauthSalesforceEnabled":false,
                  "oauthQuickBooksEnabled":false,
                  "oauthGoogleEnabled":false,
                  "displaySchedulesInClientTimezone":true,
                  "refreshFailureNotificationEnabledForServer":true,
                  "displayScheduleDescriptionAsName":false,
                  "helpEdition":"server",
                  "supportHost":"",
                  "supportPath":"",
                  "datasourceHelpUrl":"",
                  "updateEmailAllowed":true,
                  "updateDisplayNameAllowed":true,
                  "sessionIdleLimitSeconds":240,
                  "tabAdminServiceEnabled":true,
                  "alertLookBackDaysLimit":14,
                  "siteAdminSettingsEnabled":false,
                  "defaultSubscriptionsEmail":"",
                  "logicalServerInstanceId":"",
                  "offlineHelpEnabled":false,
                  "rebuildingSearchIndex":false,
                  "alertFailureCountThreshold":5
                },
                "site":{
                  "name":"Default",
                  "id":"1",
                  "role":"Publisher",
                  "luid":"ff66e08b-e7b4-4759-b21f-1fdc0e0885f9",
                  "urlName":"",
                  "refreshFailureNotificationEnabled":true,
                  "logoutEnabled":true,
                  "thirdPartyAuthState":{
                    "enabled":false,
                    "allowed":false,
                    "serverEnabled":false,
                    "hasThirdPartyAuthenticatedUsers":false
                  },
                  "versioningEnabled":true,
                  "liveDBAvailable":false
                },
                "user":{
                  "language":"en",
                  "id":"5",
                  "locale":"en_US",
                  "username":"Admin",
                  "domainName":"local",
                  "displayMode":"list",
                  "startPage":"/",
                  "serverAdmin":true,
                  "numberOfSites":7,
                  "canManageUsers":true
                },
                "isRestrictedTrustedTicketSession":false
              }
            }


## Get Total Refresh Token Count [/vizportal/api/web/v1/getTotalRefreshTokenCount]

### Get Total Refresh Token Count [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getTotalRefreshTokenCount",
              "params": {}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "refreshTokenCount":9
              }
            }


## Get Ziplog Info [/vizportal/api/web/v1/getZiplogInfo]

### Get Ziplog Info [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getZiplogInfo",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Mark Recently Viewed [/vizportal/api/web/v1/markRecentlyViewed]

### Mark Recently Viewed [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"markRecentlyViewed",
              "params":
              {
                "objectId":"699",
                "objectType":"workbook"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "objectId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "objectType": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{}
            }


## Get Field Values [/vizportal/api/web/v1/getFieldValues]

### Get Field Values [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getFieldValues",
              "params":
              {
                "field":"tags",
                "labelMatchText":"",
                "page":
                {
                  "startIndex":0,
                  "maxItems":22
                },
                "resourceType":"workbook"
              }
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "labelMatchText": {
                      "type": "string"
                    },
                    "page": {
                      "type": "object",
                      "properties": {
                        "startIndex": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "maxItems": {
                          "type": "integer",
                          "format": "int64"
                        }
                      }
                    },
                    "resourceType": {
                      "type": "string"
                    }
                  }
                }
              }
            }

+ Response 200

    Successful response

    + Body

    + Schema

            {
              "type": "string",
              "properties": {
                "result": {
                  "type": "object"
                }
              }
            }

## Get Masthead Notifications [/vizportal/api/web/v1/getMastheadNotifications]

### Get Masthead Notifications [POST]

+ Request (application/json;charset=UTF-8)

    + Headers

            accept: application/json, text/plain, */*
            cache-control: no-cache
            X-XSRF-TOKEN: xsrf_token

    + Body

            {
              "method":"getMastheadNotifications",
              "params":{}
            }

    + Schema

            {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string"
                },
                "params": {
                  "type": "object"
                }
              }
            }

+ Response 200

    Successful response

    + Body

            {
              "result":{
                "contentUrl":""
              }
            }
